@model Taylor_Mvc.Models.StaffModel

@{
    ViewBag.Title = "Register Staff";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Register</h2>

@if (TempData["emailExists"]?.ToString() == "true")
{
    <div class="alert alert-danger">This email address has already been registered.</div>
}

@using (Html.BeginForm("RegisterStaff", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Staff</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.ConfirmEmail, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })    
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            <!--@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })-->
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.EducationId, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.EducationId,
            new SelectList(Taylor_Mvc.BusinessLogic.StaffProcessor.EducationLevels(), "EducationId", "EducationLevel"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EducationId, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.SalaryId, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.SalaryId,
            new SelectList(Taylor_Mvc.BusinessLogic.StaffProcessor.Salaries(), "SalaryId", "SalaryRange"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SalaryId, "", new { @class = "text-danger" })
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.StaffPhoto, new { @class = "control-label" })
                <input type="file" name="StaffPhoto" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif"
                       class="btn btn-default" />
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.StaffResume, new { @class = "control-label" })
                <input type="file" name="StaffResume" id="fileUpload2" accept=".pdf,.doc,.docx"
                       class="btn btn-default" />
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-md-4">
            <input type="submit" value="Register" class="btn btn-default btn-primary" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $(".alert").delay(3000).fadeOut(300);
        })
    </script>

}